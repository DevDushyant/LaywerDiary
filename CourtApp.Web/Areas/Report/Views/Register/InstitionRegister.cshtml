@{
    ViewData["Title"] = localizer["Institution Register"];
    ViewData["Caption"] = localizer["User's Institution Register"];
}
@model InstitutionRegisterViewMode
<div class="card">
    <div id="viewAll" class="card-body table-responsive">
        <form asp-controller="Hearing" method="post" asp-action="UpdateCaseDate" class="d-inline">
            <div class="row">
                <div class="col-md-12">
                    <table id="tblRegister" class="table table-striped" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Sno.</th>
                                <th>Court.</th>
                                <th>Type</th>
                                <th>No</th>
                                <th>Year</th>
                                <th>Title</th>
                                <th>Institution Date</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.dtmodel.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        <input type="hidden" asp-for="@Model.dtmodel[i].Id" />
                                        @(i + 1)
                                    </td>
                                    <td> @Model.dtmodel[i].Court </td>
                                    <td>@Model.dtmodel[i].CaseType</td>
                                    <td>@Model.dtmodel[i].No</td>
                                    <td>@Model.dtmodel[i].Year</td>
                                    <td>
                                        @{
                                            string Title = Model.dtmodel[i].FirstTitle + " Vs " + Model.dtmodel[i].SecondTitle;
                                        }
                                        @Title
                                    </td>
                                    <td> @Model.dtmodel[i].InsititutionDate </td>
                                    <td text-right">
                                        <div class="btn-group">
                                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                Action
                                            </button>
                                            <div class="dropdown-menu shadow animated--grow-in">
                                                <a onclick="jQueryModalGet('/Litigation/casemanage/OnGetCaseHistory?CaseId=@Model.dtmodel[i].Id', 'See History')"
                                                   class="dropdown-item" title="See History"><i class="fa fa-history"></i>  History</a>
                                                <a onclick="jQueryModalGet('/Litigation/casemanage/GetFileUploadModel?CaseId=@Model.dtmodel[i].Id&w=ir', 'Upload Document')"
                                                   class="dropdown-item" title="Upload Document"><i class="fas fa-file-alt"></i>  Upload Document</a>
                                                <a asp-area="Litigation" asp-controller="casemanage" asp-action="GetCaseDetail"
                                                   asp-route-id="@Model.dtmodel[i].Id" class="dropdown-item" title="View Case Detail"><i class="fa fa-eye"></i>  Case Detail</a>
                                                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Cases.Delete)).Result.Succeeded)
                                                {
                                                    <form id="form_delete_@Model.dtmodel[i].Id" asp-area="Litigation"
                                                          asp-controller="casemanage" method="post"
                                                          asp-action="OnPostDelete" asp-route-id="@Model.dtmodel[i].Id" onsubmit="return jQueryModalDelete(this)">
                                                        <a href="javascript:$('#form_delete_@Model.dtmodel[i].Id').submit();" class="dropdown-item"><i class="fas fa-trash-alt"></i>  Delete</a>
                                                    </form>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script>
                $(document).ready(function () {
            var table = $("#tblRegister").DataTable({
                "language": {
                    "emptyTable": "Record is not there!"
                }
            });

            var lengthDiv = $("#tblRegister_wrapper .dataTables_length");
            var filterDiv = $("#tblRegister_wrapper .dataTables_filter");

            // Wrap Pagination Dropdown
            lengthDiv.wrap('<div class="d-flex align-items-center"></div>');

            // Define filter dropdowns (id, label)
            var filters = [
                { id: "ddlStatus", label: "Status" },
                { id: "ddlReferral", label: "Referral" },
                { id: "ddlClient", label: "Client" }
            ];

            // Dynamically calculate column width based on the number of elements
            var colWidth = `col-sm-${Math.floor(12 / (filters.length + 2))}`; // +2 for Pagination & Search

            // Function to create dropdown dynamically with dynamic width
            function createDropdown(id, label) {
                return $(
                    `<div class="${colWidth} d-flex align-items-center">
                        <label class="fw-bold me-2">${label}:</label>
                        <select class="form-control customFilter" id="${id}">
                            <option value="">Select</option>
                        </select>
                    </div>`
                );
            }

            // Create Row Container
            var filterContainer = $('<div class="row w-100 mt-2"></div>');

            // Append Pagination
            filterContainer.append(lengthDiv.parent().addClass(colWidth));

            // Append Filters
            filters.forEach(filter => {
                filterContainer.append(createDropdown(filter.id, filter.label));
            });

            // Append Search Box
            filterContainer.append(filterDiv.parent().addClass(colWidth));

            // Insert into DataTable wrapper
            $("#tblRegister_wrapper").prepend(filterContainer);

            // Fetch Dropdown Data from API
            $.ajax({
                url: "/api/filter/getFilters",
                method: "GET",
                success: function (data) {
                    populateDropdown("#ddlStatus", data.statusOptions);
                    populateDropdown("#ddlReferral", data.referralOptions);
                    populateDropdown("#ddlClient", data.clientOptions);
                },
                error: function (error) {
                    console.log("Error loading filter data:", error);
                }
            });

            // Function to populate dropdown
            function populateDropdown(selector, options) {
                options.forEach(function (item) {
                    $(selector).append(new Option(item, item));
                });
            }

            // Apply Select2 for better UI
            $(".customFilter").select2({
                width: '100%',
                placeholder: "Select",
                allowClear: true
            });

            // Filtering logic
            $(".customFilter").on("change", function () {
                let status = $("#ddlStatus").val();
                let referral = $("#ddlReferral").val();
                let client = $("#ddlClient").val();

                table.column(2).search(status).column(3).search(referral).column(4).search(client).draw();
            });
        });

        //         $(document).ready(function () {
        //     // Initialize DataTable
        //     var table = $("#tblRegister").DataTable({
        //         "language": {
        //             "emptyTable": "Record is not there!"
        //         }
        //     });

        //     // Get DataTable filter div
        //     var filterDiv = $("#tblRegister_wrapper .dataTables_filter");
        //     var lengthDiv = $("#tblRegister_wrapper .dataTables_length");

        //     // Wrap Pagination Dropdown (`dataTables_length`) in col-sm-2
        //     lengthDiv.wrap('<div class="col-sm-2 d-flex align-items-center"></div>');

        //         // Function to create dropdown dynamically
        // function createDropdown(id, label) {
        //     return $(
        //         `<div class="col-sm-2 d-flex align-items-center">
        //             <label class="fw-bold me-2">${label}:</label>
        //             <select class="form-control customFilter" id="${id}">
        //                 <option value="">Select</option>
        //             </select>
        //         </div>`
        //     );
        // }
        //      var statusFilter = createDropdown("ddlStatus", "Status");
        // var referralFilter = createDropdown("ddlReferral", "Referral");
        // var clientFilter = createDropdown("ddlClient", "Client");

        //     // Create Status filter dropdown
        //     // var statusFilter = $(
        //     //     '<div class="col-sm-2 d-flex align-items-center">' +
        //     //     '<label class="fw-bold me-2">Status:</label>' +
        //     //     '<select class="form-control customFilter" id="ddlStatus">' +
        //     //     '<option value="">Select an option</option>' +
        //     //     '<option value="ALL">All</option>' +
        //     //     '<option value="PENDING">Pending</option>' +
        //     //     '<option value="RECIEVED">Recieved</option>' +
        //     //     '</select>' +
        //     //     '</div>'
        //     // );

        //     // // Create Referral filter dropdown
        //     // var referralFilter = $(
        //     //     '<div class="col-sm-3 d-flex align-items-center">' +
        //     //     '<label class="fw-bold me-2">Referral:</label>' +
        //     //     '<select class="form-control customFilter" id="ddlReferral">' +
        //     //     '<option value="">Select an option</option>' +
        //     //     '<option value="volvo">Volvo</option>' +
        //     //     '<option value="saab">Saab</option>' +
        //     //     '<option value="opel">Opel</option>' +
        //     //     '</select>' +
        //     //     '</div>'
        //     // );

        //     // // Create Client filter dropdown
        //     // var clientFilter = $(
        //     //     '<div class="col-sm-2 d-flex align-items-center">' +
        //     //     '<label class="fw-bold me-2">Client:</label>' +
        //     //     '<select class="form-control customFilter" id="ddlClient">' +
        //     //     '<option value="">Select an option</option>' +
        //     //     '<option value="volvo">Volvo</option>' +
        //     //     '<option value="saab">Saab</option>' +
        //     //     '<option value="opel">Opel</option>' +
        //     //     '</select>' +
        //     //     '</div>'
        //     // );

        //     // Wrap the search box in col-sm-2
        //     filterDiv.wrap('<div class="col-sm-2 d-flex align-items-center"></div>');

        //     // Create a row container for proper layout
        //     var filterContainer = $('<div class="row w-100 mt-2"></div>');

        //     // Append filters and search box to the container
        //      filterContainer.append(lengthDiv.parent());
        //     filterContainer.append(statusFilter);
        //     filterContainer.append(referralFilter);
        //     filterContainer.append(clientFilter);
        //     filterContainer.append(filterDiv.parent()); // Search box

        //     // Insert the filter container before the table
        //     $("#tblRegister_wrapper").prepend(filterContainer);

        //     // Apply Select2 for better dropdown styling
        //     $(".customFilter").select2({
        //         width: '100%', // Ensures full width inside col-sm-3
        //         placeholder: "Select",
        //         allowClear: true
        //     });

        //     // Filtering logic (Modify column indexes accordingly)
        //     $("#ddlStatus, #ddlReferral, #ddlClient").on("change", function () {
        //         let status = $("#ddlStatus").val();
        //         let referral = $("#ddlReferral").val();
        //         let client = $("#ddlClient").val();
        //         // Apply filters on the correct columns (Modify indexes as needed)
        //         table.column(2).search(status).column(3).search(referral).column(4).search(client).draw();
        //     });
        // });
    </script>
}

